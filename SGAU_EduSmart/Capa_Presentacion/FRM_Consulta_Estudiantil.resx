<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_RegistroProf.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="icono_cerrar_form.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAhCAYAAACxzQkrAAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABJmlDQ1BBZG9iZSBSR0IgKDE5OTgpAAAo
        z2NgYDJwdHFyZRJgYMjNKykKcndSiIiMUmA/z8DGwMwABonJxQWOAQE+IHZefl4qAwb4do2BEURf1gWZ
        xUAa4EouKCoB0n+A2CgltTiZgYHRAMjOLi8pAIozzgGyRZKywewNIHZRSJAzkH0EyOZLh7CvgNhJEPYT
        ELsI6Akg+wtIfTqYzcQBNgfClgGxS1IrQPYyOOcXVBZlpmeUKBhaWloqOKbkJ6UqBFcWl6TmFit45iXn
        FxXkFyWWpKYA1ULcBwaCEIWgENMAarTQZKAyAMUDhPU5EBy+jGJnEGIIkFxaVAZlMjIZE+YjzJgjwcDg
        v5SBgeUPQsykl4FhgQ4DA/9UhJiaIQODgD4Dw745AMDGT/0ZOjZcAAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAACpElEQVRYR83XTYhOURzH8clCxMwYJY2XhLKSyEJKFl5jKRuzsJCVt5QiGzsWSmExWbEQiRUpqYkN
        2chsyMJLSoksyEtRdH1/T3NuvznPee5zn/vcR7P4yNz7P+f8uvc855zbl2XZlNL4Z3Cgfwdu4TaWQNf+
        l7m4hNcYCYHuIJvwCEsRN+yVMwhjj4VAF+yifMAaxI3rdhk+7ngIJKvxfOKGfMJWeAd1GYC/FfmJnR5I
        5uMxvHAfvKZbmqNP4WPcwCDySe1mQxPcGxxDXFfFSfyA930ReU0qUKCZHzechlRtO2p3Bd6fKOCk2qJA
        MzEG70CPttNQ+llrOfF+/mA/muqLAone6114Zw+xGKn62AKMw9t/h9a9VH3bQDId1+CdvsIypOqDtXgJ
        b/cGG5CqbygTKPAFTD5iM1K1m/ANXq8lZSFS9blOAslR+CB/sQdesxe/4HX3oSXF65I6DSQjiAc8CN07
        YteCqyj9Q6gSSDbiM8KgX/AAX+2anEWqfUtVA8kqPIMHcHpaqXaFugkk6xC/Pqm83XQT6AD0M47DiF7f
        MFLtClUNdA4eQE/pPX7bNa1V65Fq31KngWbhJjyMHILuaxP26zpSbEPcT0udBJoHnSZ9wFbrkD8p/b/0
        nCobaCVewMNopd6CVL1Wau1ZXn8CqdpJygTSmhOvL1X3svNI1ebaBdKqrHngnXa721/HDKTqCwMdh3ck
        dZ2HnmAITfWtAp2GdyB1nxj1pdNUGwfS2UeP1BtKXWfq+AijsTRmXuOB+hGfDqXur474CKMxNXbjfgik
        hU2fsl54D/pW887qsgu+B2rir0AeKN61RxF3Urft0MdoGFMPZFEIpJthSziFuHGvLMdbaFw9lCGfQ3Og
        rwFtEd6o13bjHQ7r70agqSPr+wfUHe767gTHaAAAAABJRU5ErkJggg==
</value>
  </data>
</root>